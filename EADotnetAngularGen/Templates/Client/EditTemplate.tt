<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CaseExtensions" #>
<h2 mat-dialog-title>Edit</h2>
<mat-dialog-content >

    <form [formGroup]="editForm" >

<#
    foreach (var attr in Model.Attributes.Cast<EA.Attribute>().Where(x=>!x.IsID)) {
        switch (attr.Type)
        {
            case "EAC__int": case "Decimal":
#>
        <div>
            <mat-form-field>
                <mat-label><#= attr.DescriptionTag() #></mat-label>
                <input formControlName="<#= attr.Name.ToCamelCase() #>" type="number" matInput  >
            </mat-form-field>
        </div>
<#
                break;

            case "String":
#>
        <div>
            <mat-form-field>
                <mat-label><#= attr.DescriptionTag() #></mat-label>
                <input formControlName="<#= attr.Name.ToCamelCase() #>" matInput  >
            </mat-form-field>
        </div>
<#
                break;

            case "Boolean":
#>
        <div>
            <p><mat-slide-toggle formControlName="<#= attr.Name.ToCamelCase() #>"><#= attr.DescriptionTag() #></mat-slide-toggle></p>
        </div>
<#
                break;

            default:
#>
        <div>
            <mat-form-field>
                <mat-label><#= attr.DescriptionTag() #></mat-label>
                <mat-select formControlName="<#= attr.Name.ToCamelCase() #>Id" >
                    @for (<#= attr.Name.ToCamelCase() #> of <#= attr.Name.ToCamelCase().Pluralize() #>; track <#= attr.Name.ToCamelCase() #>) {
                        <mat-option [value]="<#= attr.Name.ToCamelCase() #>.id">{{<#= attr.Name.ToCamelCase() #>.id}}</mat-option>
                    }
                </mat-select>
            </mat-form-field>
        </div>
<#
                break;

        }
    }
#>
        


        <ul>
            @for (error of errors; track error) {
                <li style="color: red;">
                    {{ error }}
                </li>
              }
        </ul>

        

    </form>






</mat-dialog-content>
<mat-dialog-actions align="end">
    <button mat-button mat-dialog-close>Close</button>
    <button mat-button (click)="ok()" cdkFocusInitial>Ok</button>
</mat-dialog-actions>



<#+
public EA.Element Model { get; set; }


#>