<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
    var primitivesMap = new Dictionary<string, string>()
{
    {"int", "int"},
    {"String", "string"},
    {"Decimal", "decimal"},
    {"DateTime", "DateTime"},
    {"Boolean", "bool"},
};

var defaultValues = new Dictionary<string, string>()
{
    {"String", "String.Empty"},
};

#>
using System.ComponentModel.DataAnnotations;


namespace <#= Info.ProjectName #>.Models
{

    public class <#= Model.Name #>
    {
        
<# foreach (EA.Attribute attribute in Model.Attributes) { #>
<# if(attribute.IsTypePrimitive()) { #>
        <#= !attribute.IsNullable() ? "[Required]" : "" #>
        public <#= primitivesMap[attribute.Type] + (attribute.IsNullable() ? "?" : "") #> <#= attribute.Name #> { get; init; } <#= !attribute.IsNullable() && defaultValues.ContainsKey(attribute.Type) ? "= " + defaultValues[attribute.Type] + ";" : "" #>
<# } else {  #>
        <#= !attribute.IsNullable() ? "[Required]" : "" #> 
        public int <#= attribute.Name #>Id { get; init; }

        public <#= attribute.Name #>? <#= attribute.Type #> { get; init; }
<# } #>

<# } #>

    }
}


<#+
public EA.Element Model { get; set; }
public Info Info { get; set; }

#>